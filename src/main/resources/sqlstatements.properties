EXISTS = SELECT * FROM user WHERE email=? AND password=?;
GET_USER_DATA = SELECT id, first_name, last_name, middle_name, phone, is_admin  FROM `user` WHERE email = ? and `password` = ?;
INSERT_USER = INSERT INTO user (first_name,last_name,middle_name,phone,email,password) VALUES (?,?,?,?,?,?);
SELECT_USER_CARDS_CONDITIONS = SELECT `user`.first_name, `user`.last_name, `user`.middle_name,  account.account_code, account.currency,  `condition`.deadLine, `condition`.type FROM `user`, `account`, `condition` WHERE account.user_id = ? AND user.id = account.user_id AND account.id = `condition`.account_id AND account.is_blocked = false;
SELECT_CARD_CONDITIONS = SELECT `user`.first_name, `user`.last_name, `user`.middle_name, `account`.account_code, `account`.currency, `account`.current_balance, `account`.default_balance, `condition`.percentOfWithdrawal, `condition`.monthlyPercent, `condition`.deadLine, `condition`.type FROM `user` INNER JOIN `account` ON user.id = account.user_id INNER JOIN `condition` ON account.id = `condition`.account_id WHERE account.user_id = ? AND account.is_blocked = false AND `condition`.type = ?;
SELECT_ACTIVE_ACCOUNTS = SELECT `user`.first_name, `user`.last_name, `user`.middle_name, `account`.id, `condition`.type, `account`.account_code, `account`.current_balance, `account`.currency, `condition`.deadLine FROM `user` INNER JOIN `account` ON `user`.id = `account`.user_id INNER JOIN `condition` ON account.id = `condition`.account_id WHERE account.user_id = ? AND `account`.is_blocked = false;
SELECT_ACCOUNT_HISTORY = SELECT user.first_name, user.last_name, user.middle_name, account.account_code, account.currency, `operation`.operation_date, `operation`.operation_type, `operation`.operation_summ FROM `user` INNER JOIN `account` ON user.id = account.user_id INNER JOIN `operation` ON account.id = operation.account_id WHERE operation.account_id = ? ORDER BY `operation`.id DESC;
WITHDRAWAL_BALANCE = UPDATE account SET current_balance = current_balance - ? where id = ?;
INSERT_OPERATION = INSERT INTO operation(account_id, operation_type, operation_date, operation_summ) VALUES(?,?,?,?);
REFILL_BALANCE = UPDATE account SET current_balance = current_balance + ? where id = ?;
GET_WITHDRAWAL_PERCENT = SELECT percentOfWithdrawal FROM `condition` where account_id=?;
GET_CARD_ID = SELECT `currency` FROM account WHERE id = ?;
IS_ADDRESS_EXIST = SELECT * FROM `address` where user_id=?;
BLOCK_CARD = UPDATE `account` SET is_blocked = true WHERE account_code = ?;
INSERT_APPLICATION = INSERT INTO application (user_id, type, currency, date, balance, status) VALUES(?,?,?,?,?,?);
INSERT_ADDRESS = INSERT INTO address (user_id, country, city, street, number) VALUES (?,?,?,?,?);
SELECT_BLOCKED_ACCOUNTS = SELECT user.first_name, user.last_name, user.middle_name, account.account_code, account.current_balance, account.currency FROM account INNER JOIN user ON account.user_id = user.id where account.is_blocked = true;
UNBLOCK_CARD = UPDATE `account` SET is_blocked = false WHERE account_code = ?;
GET_ALL_APPLICATIONS = SELECT `application`.id, `application`.user_id, user.last_name ,user.first_name , user.middle_name, `application`.type, `application`.currency, `application`.balance,application.date FROM `application`  INNER JOIN user ON `application`.user_id = user.id WHERE application.status = 'PENDING';
INSERT_ACCOUNT = INSERT INTO account (user_id, account_code, opening_date, currency, current_balance, default_balance) VALUES(?,?,?,?,?,?);
INSERT_CONDITIONS = INSERT INTO `condition`(account_id, percentOfWithdrawal, monthlyPercent, deadline, type) VALUE (?,?,?,?,?);
UPDATE_STATUS = UPDATE `application` SET status = ? where id = ?;
DELETE_APPLICATION = DELETE FROM application WHERE id = ?;
SELECT_LAST_INS_ID = SELECT LAST_INSERT_ID();
DELETE_USER = DELETE FROM user WHERE email = ? AND password = ?;
DELETE_OPERATION = DELETE FROM operation WHERE id = ?;

